package wit.fcl.bookmark;


import java.util.List;

/*
 THIS FILE IS AUTOMATICALLY GENERATED. 
 DEVELOPER: FCL
 2015-02-02 02:28:02
 */

public class ChildrenElement {
	private String guid;
	private String title;
	private Integer index;
	private Long dateAdded;
	private Long lastModified;
	private Integer id;
	private String charset;
	private String tags;
	private String iconuri;
	private List<AnnosElement> annos;
	private String type;
	private String uri;
	private String root;
	private List<ChildrenElement> children;

	public void init() {
		guid = "mu_vWdE_ENNk";
		title = "未分类书签";
		index = 3;
		dateAdded = 1376875321850000L;
		lastModified = 1421820627383000L;
		id = 5;
		annos =null;
		type = "text/x-moz-place-container";
		root = "unfiledBookmarksFolder";
		children = null;
	}

	public void setGuid(String guid) {
		this.guid = guid;
	}

	public String getGuid() {
		return this.guid;
	}

	public void setTitle(String title) {
		this.title = title;
	}

	public String getTitle() {
		return this.title;
	}

	public void setIndex(Integer index) {
		this.index = index;
	}

	public Integer getIndex() {
		return this.index;
	}

	public void setDateAdded(Long dateAdded) {
		this.dateAdded = dateAdded;
	}

	public Long getDateAdded() {
		return this.dateAdded;
	}

	public void setLastModified(Long lastModified) {
		this.lastModified = lastModified;
	}

	public Long getLastModified() {
		return this.lastModified;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	public Integer getId() {
		return this.id;
	}

	public void setType(String type) {
		this.type = type;
	}

	public String getType() {
		return this.type;
	}

	public void setRoot(String root) {
		this.root = root;
	}

	public String getRoot() {
		return this.root;
	}

	public void setChildren(List<ChildrenElement> children) {
		this.children = children;
	}

	public List<ChildrenElement> getChildren() {
		return this.children;
	}

	public List<AnnosElement> getAnnos() {
		return annos;
	}

	public void setAnnos(List<AnnosElement> annos) {
		this.annos = annos;
	}

	public String getUri() {
		return uri;
	}

	public void setUri(String uri) {
		this.uri = uri;
	}

	public String getCharset() {
		return charset;
	}

	public void setCharset(String charset) {
		this.charset = charset;
	}

	public String getIconuri() {
		return iconuri;
	}

	public void setIconuri(String iconuri) {
		this.iconuri = iconuri;
	}

	public String getTags() {
		return tags;
	}

	public void setTags(String tags) {
		this.tags = tags;
	}

	@Override
	public int hashCode() {
		// 在去重时起关键作用，若有uri，则用uri为重复的标准，若没有uri，则于guid做为标准
		final int prime = 31;
		int result = 1;
		if(uri == null)
		{
			result = prime * result + ((guid== null) ? 0 : guid.hashCode());
		}
		else
		{
			result = prime * result + ((uri == null) ? 0 : uri.hashCode());
		}
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		ChildrenElement other = (ChildrenElement) obj;
		if (uri == null) {
			if (other.uri != null)
				return false;
			if(!guid.equals(guid))
			{
				return false;
			}
		} else if (!uri.equals(other.uri))
			return false;
		return true;
	}


}
